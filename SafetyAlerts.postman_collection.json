{
	"info": {
		"_postman_id": "a6589645-2d9c-4fd5-8129-f62ae0da9b6d",
		"name": "SafetyAlerts",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get all persons",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/list/ppl",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"list",
						"ppl"
					]
				},
				"description": "Retourne la liste des personnes"
			},
			"response": []
		},
		{
			"name": "Get all firestations",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/list/fs",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"list",
						"fs"
					]
				},
				"description": "Retourne la liste des stations de pompiers"
			},
			"response": []
		},
		{
			"name": "Get all medical records",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/list/md",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"list",
						"md"
					]
				},
				"description": "Retourne la liste des dossiers médicaux\n"
			},
			"response": []
		},
		{
			"name": "Create new person",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "actuator",
							"type": "string"
						},
						{
							"key": "username",
							"value": "actuator",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"firstName\": \"Lucas\",\r\n        \"lastName\": \"Vannier\",\r\n        \"address\": \"71 boulevard Richard Wallace\",\r\n        \"city\": \"Puteaux\",\r\n        \"zip\": 92800,\r\n        \"phone\": \"0777281554\",\r\n        \"email\": \"lucasvannier@gmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/person",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"person"
					]
				},
				"description": "Ajouter une nouvelle personne.\r\n\r\nExemple de body :\r\n\r\n{\r\n        \"firstName\": \"Test\",\r\n        \"lastName\": \"Test\",\r\n        \"address\": \"1337 Test St\",\r\n        \"city\": \"TestCity\",\r\n        \"zip\": 91100,\r\n        \"phone\": \"0101010101\",\r\n        \"email\": \"test@email.com\"\r\n    }"
			},
			"response": []
		},
		{
			"name": "Modify person by firstname and lastname",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "actuator",
							"type": "string"
						},
						{
							"key": "username",
							"value": "actuator",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n      \"firstName\": \"John\",\r\n      \"lastName\": \"Boyd\",\r\n      \"address\": \"Valeur remplacée\",\r\n      \"city\": \"Valeur remplacée\",\r\n      \"zip\": \"97451\",\r\n      \"phone\": \"841-874-6512\",\r\n      \"email\": \"Valeur remplacée\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/person",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"person"
					]
				},
				"description": "mettre à jour une personne existante (pour le moment, supposons que le prénom et le nom de\nfamille ne changent pas, mais que les autres champs peuvent être modifiés.\n\nExemple de body : \n\n{\n      \"firstName\": \"John\",\n      \"lastName\": \"Boyd\",\n      \"address\": \"Valeur remplacée\",\n      \"city\": \"Valeur remplacée\",\n      \"zip\": \"97451\",\n      \"phone\": \"841-874-6512\",\n      \"email\": \"Valeur remplacée\"\n}"
			},
			"response": []
		},
		{
			"name": "Delete single person by firstname and lastname",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "actuator",
							"type": "string"
						},
						{
							"key": "username",
							"value": "actuator",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/person?firstname=Jacob&lastname=Boyd",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"person"
					],
					"query": [
						{
							"key": "firstname",
							"value": "Jacob"
						},
						{
							"key": "lastname",
							"value": "Boyd"
						}
					]
				},
				"description": "supprimer une personne (utilisez une combinaison de prénom et de nom comme identificateur\r\nunique)."
			},
			"response": []
		},
		{
			"name": "Create new medical record",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "actuator",
							"type": "string"
						},
						{
							"key": "username",
							"value": "actuator",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"firstName\": \"Lucas\",\r\n        \"lastName\": \"Vannier\",\r\n        \"birthdate\": \"03/06/1989\",\r\n        \"medications\": [\r\n            \"pharmacol:5000mg\",\r\n            \"terazine:10mg\",\r\n            \"noznazol:250mg\"\r\n        ],\r\n        \"allergies\": []\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/medicalRecord",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"medicalRecord"
					]
				},
				"description": "ajouter un dossier médical.\n\n\nExemple de body :\n{\n   \"firstName\":\"Test\",\n   \"lastName\":\"Test\",\n   \"birthdate\":\"01/12/1992\",\n   \"medications\":[\n\t  \"test\"\n   ],\n   \"allergies\":[\n      \"test\"\n   ]\n}"
			},
			"response": []
		},
		{
			"name": "Modify medical record by firstname and lastname",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "actuator",
							"type": "string"
						},
						{
							"key": "username",
							"value": "actuator",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Boyd\",\n    \"birthdate\": \"03/06/2000\",\n    \"medications\": [\n        \"aznol:350mg\",\n        \"hydrapermazol:100mg\"\n    ],\n    \"allergies\": [\n        \"nillacilan\"\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/medicalRecord",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"medicalRecord"
					]
				},
				"description": "mettre à jour un dossier médical existant (comme évoqué précédemment, supposer que le\r\nprénom et le nom de famille ne changent pas).\r\n\r\nExemple de body (nous allons modifier le dossier médical de Tenley Boyd) : \r\n\r\n{\r\n   \"firstName\":\"Tenley\",\r\n   \"lastName\":\"Boyd\",\r\n   \"birthdate\":\"02/18/2012\",\r\n   \"medications\":[\r\n\r\n   ],\r\n   \"allergies\":[\r\n      \"modified line\"\r\n   ]\r\n}"
			},
			"response": []
		},
		{
			"name": "Delete medical record by firstname and lastname",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "actuator",
							"type": "string"
						},
						{
							"key": "username",
							"value": "actuator",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/medicalRecord?firstName=Jacob&lastName=Boyd",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"medicalRecord"
					],
					"query": [
						{
							"key": "firstName",
							"value": "Jacob"
						},
						{
							"key": "lastName",
							"value": "Boyd"
						}
					]
				},
				"description": "supprimer un dossier médical (utilisez une combinaison de prénom et de nom comme\r\nidentificateur unique)."
			},
			"response": []
		},
		{
			"name": "Get person info by firstname and lastname",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "actuator",
							"type": "string"
						},
						{
							"key": "username",
							"value": "actuator",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/personInfo?lastname=Boyd",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"personInfo"
					],
					"query": [
						{
							"key": "lastname",
							"value": "Boyd"
						}
					]
				},
				"description": "Cette url doit retourner le nom, l'adresse, l'âge, l'adresse mail et les antécédents médicaux (médicaments,\r\nposologie, allergies) de chaque habitant. Si plusieurs personnes portent le même nom, elles doivent\r\ntoutes apparaître.\r\n"
			},
			"response": []
		},
		{
			"name": "Get persons' info and adult/child count by station number",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "actuator",
							"type": "string"
						},
						{
							"key": "username",
							"value": "actuator",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/firestation?stationNumber=2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"firestation"
					],
					"query": [
						{
							"key": "stationNumber",
							"value": "2"
						}
					]
				},
				"description": "Cette url doit retourner une liste des personnes couvertes par la caserne de pompiers correspondante.\r\nDonc, si le numéro de station = 1, elle doit renvoyer les habitants couverts par la station numéro 1. La liste\r\ndoit inclure les informations spécifiques suivantes : prénom, nom, adresse, numéro de téléphone. De plus,\r\nelle doit fournir un décompte du nombre d'adultes et du nombre d'enfants (tout individu âgé de 18 ans ou\r\nmoins) dans la zone desservie.\r\n"
			},
			"response": []
		},
		{
			"name": "Family info by lastname",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "actuator",
							"type": "string"
						},
						{
							"key": "username",
							"value": "actuator",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"address\": \"1509 Culver St\",\r\n        \"station\": 3\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/personInfo?lastName=Boyd",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"personInfo"
					],
					"query": [
						{
							"key": "lastName",
							"value": "Boyd"
						}
					]
				},
				"description": "Cette url doit retourner le nom, l'adresse, l'âge, l'adresse mail et les antécédents médicaux (médicaments,\r\nposologie, allergies) de chaque habitant. Si plusieurs personnes portent le même nom, elles doivent\r\ntoutes apparaître.\r\n"
			},
			"response": []
		},
		{
			"name": "Get childs' info by address",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/childAlert?address=1509 Culver St",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"childAlert"
					],
					"query": [
						{
							"key": "address",
							"value": "1509 Culver St"
						}
					]
				},
				"description": "Cette url doit retourner une liste d'enfants (tout individu âgé de 18 ans ou moins) habitant à cette adresse.\r\nLa liste doit comprendre le prénom et le nom de famille de chaque enfant, son âge et une liste des autres\r\nmembres du foyer. S'il n'y a pas d'enfant, cette url peut renvoyer une chaîne vide."
			},
			"response": []
		},
		{
			"name": "Get important flood infos by address",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "actuator",
							"type": "string"
						},
						{
							"key": "username",
							"value": "actuator",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/flood/stations?stations=4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flood",
						"stations"
					],
					"query": [
						{
							"key": "stations",
							"value": "4"
						}
					]
				},
				"description": "Cette url doit retourner la liste des habitants vivant à l’adresse donnée ainsi que le numéro de la caserne\r\nde pompiers la desservant. La liste doit inclure le nom, le numéro de téléphone, l'âge et les antécédents\r\nmédicaux (médicaments, posologie et allergies) de chaque personne."
			},
			"response": []
		},
		{
			"name": "Get importants floods' infos by station number",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "Flood",
					"host": [
						"Flood"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get phone numbers by station number",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "actuator",
							"type": "string"
						},
						{
							"key": "username",
							"value": "actuator",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/phoneAlert?station=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"phoneAlert"
					],
					"query": [
						{
							"key": "station",
							"value": "1"
						}
					]
				},
				"description": "Cette url doit retourner une liste des numéros de téléphone des résidents desservis par la caserne de\r\npompiers. Nous l'utiliserons pour envoyer des messages texte d'urgence à des foyers spécifiques."
			},
			"response": []
		},
		{
			"name": "Get emails by city",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "actuator",
							"type": "string"
						},
						{
							"key": "username",
							"value": "actuator",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/communityEmail?city=Culver",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"communityEmail"
					],
					"query": [
						{
							"key": "city",
							"value": "Culver"
						}
					]
				},
				"description": "Cette url doit retourner les adresses mail de tous les habitants de la ville."
			},
			"response": []
		},
		{
			"name": "Create new firestation",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "actuator",
							"type": "string"
						},
						{
							"key": "username",
							"value": "actuator",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "  {\r\n        \"address\": \"71 boulevard Richard Wallace\",\r\n        \"station\": 9\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/firestation",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"firestation"
					]
				},
				"description": "ajout d'un mapping caserne/adresse. \n\nExemple d'un body :\n\n{\n   \"address\":\"Nouvelle adresse\",\n   \"station\":\"9\"\n}"
			},
			"response": []
		},
		{
			"name": "Modify station number by station address",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "actuator",
							"type": "string"
						},
						{
							"key": "username",
							"value": "actuator",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"address\": \"1509 Culver St\",\r\n        \"station\": 12\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/firestation",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"firestation"
					]
				},
				"description": "mettre à jour le numéro de la caserne de pompiers grâce à son adresse.\n\n\nExemple de body : \n{\n   \"address\":\"951 LoneTree Rd\",\n   \"station\":\"new number\"\n}"
			},
			"response": []
		},
		{
			"name": "Delete single firestation by address",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/firestation?address=29 15th St",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"firestation"
					],
					"query": [
						{
							"key": "address",
							"value": "29 15th St"
						}
					]
				},
				"description": "supprimer le mapping d'une caserne grâce à son adresse."
			},
			"response": []
		},
		{
			"name": "Delete multiple firestations",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/firestation/multiple?station=2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"firestation",
						"multiple"
					],
					"query": [
						{
							"key": "station",
							"value": "2"
						}
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}